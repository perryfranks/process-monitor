package templates

import "procmon.perryfanks.nerd/internal/models"

// Card status based off exit code. Success/Error/Running
templ statusIcon(proc models.Process) {
	if proc.Finished {
		if proc.ExitStatus == 0 {
			<div class="tooltip">
				<i class="material-icons text-green-500">check</i>
				<span class="tooltiptext">Exit code: { proc.ExitStatusStr() }<br/>(Success)</span>
			</div>
		} else {
			<div class="tooltip">
				<i class="material-icons text-red-600">close</i>
				<span class="tooltiptext">Exit code: { proc.ExitStatusStr() }<br/>(Error)</span>
			</div>
		}
	} else {
		<div class="tooltip">
			<i class="material-icons text-gray-400">hourglass_empty</i>
			<span class="tooltiptext">Process running</span>
		</div>
	}
}

// Renders a list of processess as cards.
templ ProcessList(processes []models.Process) {
	for _, proc := range processes {
		<div class="mx-auto w-3/5 my-6 py-2 px-4 bg-tPalePink shadow-tGothicGreen border-tGothicGreen rounded-lg shadow-md">
			<div class="flex grow justify-center text-center">
				<h2 class="text-center text-xl font-bold ">{ proc.Name }</h2>
				<div class="flex justify-end w-full">
					@statusIcon(proc)
				</div>
			</div>
			<div class="flex grow">
				<div class="flex flex-col grow justify-start">
					<p class="text-gray-700">Workspace: { proc.Workspace }</p>
					<p class="text-gray-700">User: { proc.User }</p>
					<p class="text-gray-700">PID: { proc.Pid }</p>
				</div>
				<div class="flex flex-col grow justify-end text-end">
					<p class="text-gray-700">ID: { proc.IdString }</p>
					<p class="text-gray-700">Start: { proc.StartTime.Format("15:4:5 02/01/06") }</p>
					if proc.Finished {
						<p class="text-gray-700">End: { proc.FinishTime.Format("15:4:5 02/01/06") }</p>
					} else {
						<p class="h-4"></p>
					}
				</div>
			</div>
			if proc.Finished {
				<details class="flex grow flex-col justify-center">
					<summary class="text-center font-semibold  hover:text-tLavender active:text-tPink">Output:</summary>
					<pre class="w-full max-h-96 overflow-scroll mx-2 border-solid border-tGothicGreen border-1 bg-white">
						{ proc.CapturedOut }
					</pre>
				</details>
			}
		</div>
	}
}

templ PollProcessList(processes []models.Process, url string, trigger string) {
	<div class="m-4 grow w-full" hx-get={ url } hx-trigger={ trigger }>
		@ProcessList(processes)
	</div>
}
